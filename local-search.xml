<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>LCY算法培训-进阶班-第1讲（STL在竞赛中的应用）</title>
    <link href="/2021/03/31/LCY%E7%AE%97%E6%B3%95%E5%9F%B9%E8%AE%AD-%E8%BF%9B%E9%98%B6%E7%8F%AD-%E7%AC%AC1%E8%AE%B2%EF%BC%88STL%E5%9C%A8%E7%AB%9E%E8%B5%9B%E4%B8%AD%E7%9A%84%E5%BA%94%E7%94%A8%EF%BC%89/"/>
    <url>/2021/03/31/LCY%E7%AE%97%E6%B3%95%E5%9F%B9%E8%AE%AD-%E8%BF%9B%E9%98%B6%E7%8F%AD-%E7%AC%AC1%E8%AE%B2%EF%BC%88STL%E5%9C%A8%E7%AB%9E%E8%B5%9B%E4%B8%AD%E7%9A%84%E5%BA%94%E7%94%A8%EF%BC%89/</url>
    
    <content type="html"><![CDATA[<p>2021杭电ACM-LCY算法培训进阶班知识总结。STL在竞赛中的应用PPT内容整理。</p><hr><h2 id="知识目录"><a href="#知识目录" class="headerlink" title="知识目录"></a>知识目录</h2><hr><h3 id="相关头文件"><a href="#相关头文件" class="headerlink" title="相关头文件"></a>相关头文件</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;bits/stdc++.h&gt;//万能头文件</span></span><br></code></pre></td></tr></table></figure><h3 id="迭代器"><a href="#迭代器" class="headerlink" title="迭代器"></a>迭代器</h3><hr><h3 id="1-队列-queue"><a href="#1-队列-queue" class="headerlink" title="1.队列(queue)"></a>1.队列(queue)</h3><h6 id="1）特点"><a href="#1）特点" class="headerlink" title="1）特点"></a>1）特点</h6><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">1.先进先出(FIFO)<br>2.从队头删除元素<br>3.在队尾加入元素<br></code></pre></td></tr></table></figure><h6 id="2）常见操作"><a href="#2）常见操作" class="headerlink" title="2）常见操作"></a>2）常见操作</h6><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">创建队列对象<br>queue&lt;元素类型&gt; 队列名;<br>queue&lt;int&gt; qq;<br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">1.判断队列是否为空<br>队列名.empty();<br>qq.empty();<br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">2.查询队列大小<br>队列名.size();<br>qq.size();<br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">3.访问队首元素<br>队列名.front();<br>qq.front();<br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">4.访问队尾元素<br>队列名.back();<br>qq.back();<br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">5.加入元素(在队尾加入)<br>队列名.push(元素名);<br>qq.push();<br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">6.删除元素(在队首删除)<br>队列名.pop();<br>qq.pop();<br></code></pre></td></tr></table></figure><h6 id="3）实例"><a href="#3）实例" class="headerlink" title="3）实例"></a>3）实例</h6><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-keyword">int</span> a,b,c,d;<br><span class="hljs-built_in">queue</span>&lt;<span class="hljs-keyword">int</span>&gt; qq;<br>qq.push(<span class="hljs-number">1</span>);<br>qq.push(<span class="hljs-number">3</span>);<br>qq.push(<span class="hljs-number">4</span>);<br>qq.pop();<br>a=qq.front();<span class="hljs-comment">//a=1</span><br>b=qq.back();<span class="hljs-comment">//b=3</span><br>c=qq.size();<span class="hljs-comment">//c=2</span><br>d=qq.empty();<span class="hljs-comment">//d=0</span><br></code></pre></td></tr></table></figure><hr><h3 id="2-优先队列-priority-queue"><a href="#2-优先队列-priority-queue" class="headerlink" title="2.优先队列(priority_queue)"></a>2.优先队列(priority_queue)</h3><h6 id="1）特点-1"><a href="#1）特点-1" class="headerlink" title="1）特点"></a>1）特点</h6><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">1.在队尾加入元素<br>2.从队头删除元素<br>3.每次取出的是具有最高优先权的元素(不一定先进先出)<br>4.内部的本质是用堆实现的<br></code></pre></td></tr></table></figure><h6 id="2）常见操作-1"><a href="#2）常见操作-1" class="headerlink" title="2）常见操作"></a>2）常见操作</h6><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">创建队列对象<br>priority_queue&lt;元素类型&gt; 队列名;<br>priority_queue&lt;int&gt; qq;<br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">1.判断队列是否为空<br>队列名.empty();<br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">2.查询队列大小<br>队列名.size();<br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">3.返回优先权最高的元素<br>队列名.push();<br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">4.加入元素<br>队列名.push();<br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">5.删除元素(删除第一个元素)<br>队列名.pop();<br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">6.访问最优元素<br>队列名.top();<br></code></pre></td></tr></table></figure><h6 id="3）实例-1"><a href="#3）实例-1" class="headerlink" title="3）实例"></a>3）实例</h6><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> <span class="hljs-built_in">std</span>;<br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br>    <span class="hljs-built_in">priority_queue</span>&lt;<span class="hljs-keyword">int</span>&gt; q;<br>    <span class="hljs-keyword">int</span> t,a=<span class="hljs-number">2</span>,b=<span class="hljs-number">5</span>,c=<span class="hljs-number">3</span>;<br>    q.push(a); q.push(b); q.push(c);<br>    <span class="hljs-keyword">while</span>(!q.empty())&#123;<br>        t=q.top();<br>        q.pop();<br>        <span class="hljs-built_in">cout</span>&lt;&lt;t&lt;&lt;<span class="hljs-built_in">endl</span>;<span class="hljs-comment">//printf(&quot;%d\n&quot;,t);</span><br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br><span class="hljs-comment">//结果</span><br><span class="hljs-number">5</span><br><span class="hljs-number">3</span><br><span class="hljs-number">2</span>    <br></code></pre></td></tr></table></figure><hr><h3 id="3-栈-stack"><a href="#3-栈-stack" class="headerlink" title="3.栈(stack)"></a>3.栈(stack)</h3><h6 id="1）特点-2"><a href="#1）特点-2" class="headerlink" title="1）特点"></a>1）特点</h6><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">1.先进后出(FILO)<br>2.从栈顶删除元素<br>3.从栈顶加入元素<br></code></pre></td></tr></table></figure><h6 id="2）常见操作-2"><a href="#2）常见操作-2" class="headerlink" title="2）常见操作"></a>2）常见操作</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs b">创建栈对象<br>stack&lt;元素类型&gt; 栈名;<br>stack&lt;int&gt; st;<br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">1.判断栈是否为空<br>栈名.empty();<br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">2.查询栈大小<br>栈名.size();<br></code></pre></td></tr></table></figure><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-number">3.</span>访问栈顶元素 <span class="hljs-comment">//要先确保栈非空</span><br>栈名.top();<br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">4.栈顶加入元素<br>栈名.push(元素名);<br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">5.删除栈顶元素<br>栈名.pop();<br></code></pre></td></tr></table></figure><h4 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs c++">栈和队列一样，没有clear之类的函数，如果想要清空一个栈，需要循环调用出栈函数<br></code></pre></td></tr></table></figure><h6 id="3）实例-2"><a href="#3）实例-2" class="headerlink" title="3）实例"></a>3）实例</h6><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-built_in">stack</span>&lt;<span class="hljs-keyword">int</span>&gt; s;<br>s.push(<span class="hljs-number">1</span>);<br>s.push(<span class="hljs-number">2</span>);<br>s.push(<span class="hljs-number">3</span>);<br>s.pop();<br><span class="hljs-built_in">cout</span>&lt;&lt;s.top()&lt;&lt;<span class="hljs-built_in">endl</span>; <span class="hljs-comment">//2</span><br>s.top()+=<span class="hljs-number">3</span>;<br><span class="hljs-built_in">cout</span>&lt;&lt;s.top()&lt;&lt;<span class="hljs-built_in">endl</span>; <span class="hljs-comment">//5</span><br></code></pre></td></tr></table></figure><hr><h3 id="4-向量，动态数组-vector"><a href="#4-向量，动态数组-vector" class="headerlink" title="4.向量，动态数组(vector)"></a>4.向量，动态数组(vector)</h3><h6 id="1-向量的定义"><a href="#1-向量的定义" class="headerlink" title="1)向量的定义"></a>1)向量的定义</h6><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-built_in">vector</span>&lt;元素类型&gt; 向量名;<br><span class="hljs-built_in">vector</span>&lt;<span class="hljs-keyword">int</span>&gt; a;<br></code></pre></td></tr></table></figure><h6 id="2）向量初始化"><a href="#2）向量初始化" class="headerlink" title="2）向量初始化"></a>2）向量初始化</h6><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-built_in">vector</span>&lt;<span class="hljs-keyword">int</span>&gt; abc;<span class="hljs-comment">//初始化一个size为0的vector，也是最常用的</span><br><span class="hljs-function"><span class="hljs-built_in">vector</span>&lt;<span class="hljs-keyword">int</span>&gt; <span class="hljs-title">abc</span><span class="hljs-params">(<span class="hljs-number">10</span>)</span></span>;<span class="hljs-comment">//初始化了10个默认值为0的元素</span><br><span class="hljs-function"><span class="hljs-built_in">vector</span>&lt;<span class="hljs-keyword">int</span>&gt; <span class="hljs-title">abc</span><span class="hljs-params">(<span class="hljs-number">10</span>,<span class="hljs-number">1</span>)</span></span>;<span class="hljs-comment">//初始化了10个值为1的元素</span><br></code></pre></td></tr></table></figure><h6 id="3）向量的常见操作"><a href="#3）向量的常见操作" class="headerlink" title="3）向量的常见操作"></a>3）向量的常见操作</h6><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-number">1.</span>取向量首元素的迭代器<br>向量名.begin();<br></code></pre></td></tr></table></figure><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-number">2.</span>取向量尾元素下一地址<br>向量名.end();<span class="hljs-comment">//不是最后一个元素，而是最后一个元素的下一个位置。begin和end可以理解成区间中的前闭后开，即[a.begin,a.end),这个区间包括了向量a中的全部元素</span><br></code></pre></td></tr></table></figure><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-number">3.</span>取向量首元素的值<br>向量名.front();<br></code></pre></td></tr></table></figure><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-number">4.</span>取向量尾元素的值<br>向量名.back();<br></code></pre></td></tr></table></figure><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-number">5.</span>下标形式访问<br><span class="hljs-keyword">int</span> a=向量名[t];<span class="hljs-comment">//类似普通数组的访问操作，其中t可以为任何数，但不能超出向量中实际的个数</span><br></code></pre></td></tr></table></figure><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-number">6.</span>往尾部添加一个元素<br>向量名.push_back(值);<span class="hljs-comment">//最常见操作</span><br></code></pre></td></tr></table></figure><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-number">7.</span>删除尾部第一个元素<br>向量名.pop_back();<br></code></pre></td></tr></table></figure><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-number">8.</span>判断向量是否为空<br>向量名.empty();<br></code></pre></td></tr></table></figure><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-number">9.</span>求向量中元素的个数<br>向量名.size();<span class="hljs-comment">//实际元素的个数，不是容量</span><br></code></pre></td></tr></table></figure><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-number">10.</span>翻转向量<br>reverse(a.begin() , a.end());<span class="hljs-comment">//a为向量名</span><br></code></pre></td></tr></table></figure><h6 id="4）向量的经典应用"><a href="#4）向量的经典应用" class="headerlink" title="4）向量的经典应用"></a>4）向量的经典应用</h6><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-number">1.</span>邻接表<br><span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">edge</span>&#123;</span><span class="hljs-keyword">int</span> from,to,value;&#125;<br><span class="hljs-keyword">const</span> <span class="hljs-keyword">int</span> maxn=<span class="hljs-number">1e5</span>;<br><span class="hljs-built_in">vector</span>&lt;edge&gt; Map[maxn];<span class="hljs-comment">//一维向量相当于二维数组</span><br>若用普通二维数组存邻接表，会造成极大浪费(超内存)<br><span class="hljs-comment">//初始化，clear函数是清空向量，不是变成0</span><br><span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">0</span>;i&lt;maxn;++i) Map[i].clear();<br></code></pre></td></tr></table></figure><hr><h3 id="5-集合-set"><a href="#5-集合-set" class="headerlink" title="5.集合(set)"></a>5.集合(set)</h3><h6 id="数学上的集合的三个特征"><a href="#数学上的集合的三个特征" class="headerlink" title="数学上的集合的三个特征"></a>数学上的集合的三个特征</h6><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-number">1.</span>确定性(任一元素必须是确定属于或不属于某个集合)<br><span class="hljs-number">2.</span>互异性(集合中的元素互不相同)<br><span class="hljs-number">3.</span>无序性(集合中的元素没有先后之分)<br></code></pre></td></tr></table></figure><h6 id="1）特点-3"><a href="#1）特点-3" class="headerlink" title="1）特点"></a>1）特点</h6><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-built_in">set</span>的含义就是集合，是一个有序的，没有相同元素的容器，且里面的元素都是排序好的，支持插入，删除，查找等操作，所有的操作都是严格在logn时间内完成，效率非常高<br></code></pre></td></tr></table></figure><h6 id="2）常见操作-3"><a href="#2）常见操作-3" class="headerlink" title="2）常见操作"></a>2）常见操作</h6><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-number">1.</span><span class="hljs-built_in">set</span>的声明<br><span class="hljs-built_in">set</span>&lt;<span class="hljs-keyword">int</span>&gt; s;<br></code></pre></td></tr></table></figure><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-number">2.</span><span class="hljs-built_in">set</span>的清空<br>s.clear();<br></code></pre></td></tr></table></figure><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-number">3.</span>插入一个元素x<br>s.insert(x);<span class="hljs-comment">//如果集合中之前没有此元素，则成功插入并自动排序，否则不插入</span><br></code></pre></td></tr></table></figure><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-number">4.</span>查询有否元素x<br><span class="hljs-keyword">int</span> hav = s.count(x); <span class="hljs-comment">//有则返回1，无则返回0</span><br></code></pre></td></tr></table></figure><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-number">5.</span>查找x并返回迭代器<br><span class="hljs-built_in">set</span>&lt;<span class="hljs-keyword">int</span>&gt;::iterator it = s.find(x);<br></code></pre></td></tr></table></figure><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-number">6.</span>判断是否为空集<br><span class="hljs-keyword">bool</span> isempty = s.empty();<span class="hljs-comment">//若为空集则返回真，否则返回假</span><br></code></pre></td></tr></table></figure><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-number">7.</span>求集合元素个数<br><span class="hljs-keyword">int</span> n = s.size();<br></code></pre></td></tr></table></figure><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-number">8.</span>删除元素x<br>s.erase(x);<br></code></pre></td></tr></table></figure><h6 id="3）用法注意"><a href="#3）用法注意" class="headerlink" title="3）用法注意"></a>3）用法注意</h6><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-number">1.</span><span class="hljs-built_in">set</span>最主要用途：自动去重并按升序排序<br><span class="hljs-number">2.</span>如若对<span class="hljs-built_in">set</span>中的元素降序排序，则<br><span class="hljs-built_in">set</span>声明<br>    <span class="hljs-built_in">set</span>&lt;<span class="hljs-keyword">int</span>,greater&lt;<span class="hljs-keyword">int</span>&gt; &gt; st;<br>迭代器也随之改变<br>    <span class="hljs-built_in">set</span>&lt;<span class="hljs-keyword">int</span>,greater&lt;<span class="hljs-keyword">int</span>&gt; &gt;::iterator it;<br>如若<span class="hljs-keyword">int</span>类型改为结构体时，排序就在结构体中加载小于符号<br><span class="hljs-number">3.</span><span class="hljs-built_in">set</span>只能通过迭代器(iterator)访问<br><span class="hljs-number">4.</span><span class="hljs-built_in">set</span>不支持 it &lt; st.end() 的写法，可写成 it != st.end() <br></code></pre></td></tr></table></figure><hr><h3 id="6-string类"><a href="#6-string类" class="headerlink" title="6.string类"></a>6.string类</h3><h6 id="1）string对象的声明"><a href="#1）string对象的声明" class="headerlink" title="1）string对象的声明"></a>1）string对象的声明</h6><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-number">1.</span><span class="hljs-built_in">string</span> str;<br><span class="hljs-number">2.</span><span class="hljs-built_in">string</span> strl=<span class="hljs-string">&quot;qwertyuui&quot;</span>;<br></code></pre></td></tr></table></figure><h6 id="2）求string对象的长度"><a href="#2）求string对象的长度" class="headerlink" title="2）求string对象的长度"></a>2）求string对象的长度</h6><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-built_in">string</span> strTest=<span class="hljs-string">&quot;test&quot;</span>;<br><span class="hljs-number">1.</span> strTest.length(); <span class="hljs-comment">//结果为4</span><br><span class="hljs-number">2.</span> strTest.size(); <span class="hljs-comment">//结果为4</span><br></code></pre></td></tr></table></figure><h6 id="3）string对象的连接"><a href="#3）string对象的连接" class="headerlink" title="3）string对象的连接"></a>3）string对象的连接</h6><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs c++">可以使用+和+=运算符对<span class="hljs-built_in">string</span>对象执行字符串的连接操作(还有append成员函数实现字符串连接，忽略之)<br></code></pre></td></tr></table></figure><h6 id="4）string对象的比较"><a href="#4）string对象的比较" class="headerlink" title="4）string对象的比较"></a>4）string对象的比较</h6><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs c++">可以用 &lt;、&lt;=、==、!=、&gt;=、&gt; 运算符比较<span class="hljs-built_in">string</span>对象(还有compare成员函数用于比较字符串，忽略之)<br></code></pre></td></tr></table></figure><h6 id="5）求string对象的字串"><a href="#5）求string对象的字串" class="headerlink" title="5）求string对象的字串"></a>5）求string对象的字串</h6><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs c++">substr 成员函数可以用于求字串(n,m)<br>调用时，如果省略m或者m超过了字符串的长度，则求出来的字串就是从下标n开始一直到字符串结束的部分<br><span class="hljs-built_in">string</span> s1=<span class="hljs-string">&quot;this is ok&quot;</span>;<br><span class="hljs-number">1.</span><span class="hljs-built_in">string</span> s2=s1.substr(<span class="hljs-number">2</span>,<span class="hljs-number">4</span>); <span class="hljs-comment">//s2=&quot;is i&quot;</span><br><span class="hljs-number">2.</span>s2=s1.substr(<span class="hljs-number">2</span>);<span class="hljs-comment">// s2=&quot;is is ok&quot;</span><br></code></pre></td></tr></table></figure><h6 id="6）插入字符串"><a href="#6）插入字符串" class="headerlink" title="6）插入字符串"></a>6）插入字符串</h6><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs c++">insert 成员函数可以在<span class="hljs-built_in">string</span>对象中插入另一个字符串，返回值为对象自身的引用<br>string s1(&quot;Limitless&quot;), s2(&quot;00&quot;);<br><span class="hljs-number">1.</span> s1.insert(<span class="hljs-number">2</span>,<span class="hljs-string">&quot;123&quot;</span>); <span class="hljs-comment">//&quot;Li123mitless&quot;</span><br><span class="hljs-number">2.</span> s1.insert(<span class="hljs-number">3</span>,s2); <span class="hljs-comment">//s1=&quot;Li10023mitless&quot;</span><br><span class="hljs-number">3.</span> s1.insert(<span class="hljs-number">3</span>,<span class="hljs-number">5</span>,<span class="hljs-string">&#x27;x&#x27;</span>);<span class="hljs-comment">//s1=&quot;Li1xxxxx0023mitless&quot;</span><br></code></pre></td></tr></table></figure><h6 id="7）删除字串"><a href="#7）删除字串" class="headerlink" title="7）删除字串"></a>7）删除字串</h6><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs c++">erase 成员函数可以删除<span class="hljs-built_in">string</span>对象中的字串，返回值为对象自身的引用<br><span class="hljs-function"><span class="hljs-built_in">string</span> <span class="hljs-title">s1</span><span class="hljs-params">(<span class="hljs-string">&quot;Real Steel&quot;</span>)</span></span>;<br><span class="hljs-number">1.</span> s1.erase(<span class="hljs-number">1</span>,<span class="hljs-number">3</span>);<span class="hljs-comment">//s1=&quot;R Steel&quot;</span><br><span class="hljs-number">2.</span> s1.erase(<span class="hljs-number">5</span>);<span class="hljs-comment">//s1=&quot;R Ste&quot;</span><br></code></pre></td></tr></table></figure><h6 id="8）交换两个string对象的内容"><a href="#8）交换两个string对象的内容" class="headerlink" title="8）交换两个string对象的内容"></a>8）交换两个string对象的内容</h6><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs c++">swap成员函数可以交换两个<span class="hljs-built_in">string</span>对象的内容<br>string s1(&quot;West&quot;),s2(&quot;East&quot;);<br>s1.swap(s2);<span class="hljs-comment">//s1=&quot;East&quot;,s2=&quot;West&quot;</span><br></code></pre></td></tr></table></figure><h6 id="9）字符串的查找操作"><a href="#9）字符串的查找操作" class="headerlink" title="9）字符串的查找操作"></a>9）字符串的查找操作</h6><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-built_in">string</span> str=<span class="hljs-string">&quot;The apple thinks apple is delicious&quot;</span>; <span class="hljs-comment">//长度34</span><br><span class="hljs-built_in">string</span> key=<span class="hljs-string">&quot;apple&quot;</span>;<br><span class="hljs-number">1.</span> <span class="hljs-keyword">int</span> pos1=str.find(key);<span class="hljs-comment">//4</span><br>    s.find(str),查找字符串str在当前字符串s中第一次出现的位置<br><span class="hljs-number">2.</span> <span class="hljs-keyword">int</span> pos2=str.find(key,<span class="hljs-number">10</span>);<span class="hljs-comment">//17</span><br>    s.find(str,pos),查找字符串str在当前字符串s的[pos,end]中第一次出现的位置，即从pos开始到字符串的最后，str第一次出现的位置<br></code></pre></td></tr></table></figure><h6 id="10）用STL算法操作string对象"><a href="#10）用STL算法操作string对象" class="headerlink" title="10）用STL算法操作string对象"></a>10）用STL算法操作string对象</h6><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-function"><span class="hljs-built_in">string</span> <span class="hljs-title">s</span><span class="hljs-params">(<span class="hljs-string">&quot;afgcbed&quot;</span>)</span></span>;<br>sort(s.begin(),s,end());<br><span class="hljs-built_in">cout</span>&lt;&lt;s&lt;&lt;<span class="hljs-built_in">endl</span>;<span class="hljs-comment">//输出abcdefg</span><br>next_permutation(s.begin(),s,end());<br><span class="hljs-built_in">cout</span>&lt;&lt;s&lt;&lt;<span class="hljs-built_in">endl</span>;<span class="hljs-comment">//输出abcdegf</span><br>reverse(s.begin(),s,end());<br><span class="hljs-built_in">cout</span>&lt;&lt;s&lt;&lt;<span class="hljs-built_in">endl</span>;<span class="hljs-comment">//fgedcba</span><br></code></pre></td></tr></table></figure><hr><h3 id="7-映射-map"><a href="#7-映射-map" class="headerlink" title="7.映射(map)"></a>7.映射(map)</h3><h6 id="1）特点-4"><a href="#1）特点-4" class="headerlink" title="1）特点"></a>1）特点</h6><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-built_in">map</span>是一个键值对(key/value)容器，对于迭代器来说，可以修改value，而不能修改key。Map会根据key自动排序<br><span class="hljs-built_in">map</span>类型通常可理解为关联数组：可使用键作为下标来获取一个值。关联的本质在于：元素的值与某个特定的键相关联，而并非通过元素在数组中的位置来获取<br></code></pre></td></tr></table></figure><h6 id="2）常见操作-4"><a href="#2）常见操作-4" class="headerlink" title="2）常见操作"></a>2）常见操作</h6><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-number">1.</span><span class="hljs-built_in">map</span>的定义<br><span class="hljs-built_in">map</span>&lt;<span class="hljs-keyword">int</span>,<span class="hljs-built_in">string</span>&gt; m;<span class="hljs-comment">//定义一个空map m;</span><br></code></pre></td></tr></table></figure><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-number">2.</span>返回m中键值等于k的元素的个数(<span class="hljs-number">1</span>或<span class="hljs-number">0</span>)<br>m.count(k);<br></code></pre></td></tr></table></figure><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-number">3.</span>查找元素<br>m.find(k);<span class="hljs-comment">//存在则返回指向该元素的迭代器，否则返回结束地址end()</span><br></code></pre></td></tr></table></figure><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-number">4.</span>删除元素<br>m.erase(k);<span class="hljs-comment">//删除m中键为k的元素，返回删除元素的个数(1或0)</span><br></code></pre></td></tr></table></figure><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-number">5.</span>删除迭代器指向的元素<br>m.erase(p);<span class="hljs-comment">//从m中删除迭代器p所指向的元素</span><br></code></pre></td></tr></table></figure><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-number">6.</span>插入元素<br>m.insert(e);<span class="hljs-comment">//e是一个用在m上的value_type类型的值(一个pair)。如果键e.first不在m中，则插入一个值为e.second的新元素；如果该键在m中已存在，那么不进行任何操作</span><br></code></pre></td></tr></table></figure><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-number">7.</span>清空元素<br>m.clear();<span class="hljs-comment">//清空m</span><br></code></pre></td></tr></table></figure><hr><h3 id="8-STL中的算法"><a href="#8-STL中的算法" class="headerlink" title="8.STL中的算法"></a>8.STL中的算法</h3><h6 id="1）全排序-next-permutation"><a href="#1）全排序-next-permutation" class="headerlink" title="1）全排序(next_permutation)"></a>1）全排序(next_permutation)</h6><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs c++">通常用于生成序列的全排列<br><span class="hljs-keyword">int</span> a[]=&#123;<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>&#125;;<br><span class="hljs-keyword">do</span>&#123;<br>    <span class="hljs-built_in">cout</span>&lt;&lt;a[<span class="hljs-number">0</span>]&lt;&lt;<span class="hljs-string">&quot; &quot;</span>&lt;&lt;a[<span class="hljs-number">1</span>]&lt;&lt;<span class="hljs-string">&quot; &quot;</span>&lt;&lt;a[<span class="hljs-number">2</span>]&lt;&lt;<span class="hljs-built_in">endl</span>;<br>&#125;<span class="hljs-keyword">while</span>(next_permutation(a,a+<span class="hljs-number">3</span>))<br><span class="hljs-number">1.</span>若当前调用排序已经达到最大字典序，比如<span class="hljs-number">321</span>，则函数返回<span class="hljs-literal">false</span>;<br><span class="hljs-number">2.</span>修改函数的参数，比如(a,a+<span class="hljs-number">2</span>),则可以只对部分长度全排列<br></code></pre></td></tr></table></figure><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs c++">next_permutation是如何生成序列的全排列？<br><span class="hljs-number">1.</span>从最右边开始，两两比较相邻的元素，直至找到右边比左边大的一对，左边那个就是将要被替换的，再从最右边开始找比这个元素大的第一个，交换他们两个.<br><span class="hljs-number">2.</span>交换之后，翻转交换元素的后面的所有元素<br><span class="hljs-number">3.</span>比如：<span class="hljs-number">1</span> <span class="hljs-number">3</span> <span class="hljs-number">4</span> <span class="hljs-number">6</span> <span class="hljs-number">5</span> <span class="hljs-number">2</span> =&gt; <span class="hljs-number">1</span> <span class="hljs-number">3</span> <span class="hljs-number">5</span> <span class="hljs-number">6</span> <span class="hljs-number">4</span> <span class="hljs-number">2</span> =&gt; <span class="hljs-number">1</span> <span class="hljs-number">3</span> <span class="hljs-number">5</span> <span class="hljs-number">2</span> <span class="hljs-number">4</span> <span class="hljs-number">6</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>2021杭电ACM-LCY算法培训进阶班</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>实现批量生成文本/文件等</title>
    <link href="/2021/03/07/%E6%89%B9%E9%87%8F%E7%94%9F%E6%88%90%E6%96%87%E6%9C%AC%E6%96%87%E4%BB%B6/"/>
    <url>/2021/03/07/%E6%89%B9%E9%87%8F%E7%94%9F%E6%88%90%E6%96%87%E6%9C%AC%E6%96%87%E4%BB%B6/</url>
    
    <content type="html"><![CDATA[<p>在工作或者生活中，可能会遇见需要批量生成一些文本或者文件夹的情况，今天以批量生成txt文本为例，教大家怎么批量新建文档的技巧。同样适用于创建其他文本或文档等。</p><h2 id="方法-步骤"><a href="#方法-步骤" class="headerlink" title="方法/步骤"></a>方法/步骤</h2><h3 id="1-第一步"><a href="#1-第一步" class="headerlink" title="1.第一步"></a>1.第一步</h3><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs cmake">首先在C盘任意的地方新建一个文件夹或文本，比如在桌面新建一个txt文本，名称任意起就行了。<br>这里以建一个 <span class="hljs-keyword">test</span>.txt 文本为例。<br></code></pre></td></tr></table></figure><h3 id="2-第二步"><a href="#2-第二步" class="headerlink" title="2.第二步"></a>2.第二步</h3><figure class="highlight llvm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs llvm">打开office工具中的Excel表格文件，在任意中输入 <span class="hljs-keyword">c</span>:&gt;<span class="hljs-number">1</span>.txt <br></code></pre></td></tr></table></figure><p><strong>注意：在C盘建的输 c:&gt;1.txt ，如果是在其他盘则写其他盘，如在D盘：d:&gt;1.txt</strong></p><p><img src="http://i1.fuimg.com/734148/7ed945294ae5c0e0.png" alt="image-20210307125154412"></p><h3 id="3-第三步"><a href="#3-第三步" class="headerlink" title="3.第三步"></a>3.第三步</h3><figure class="highlight gcode"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs gcode">让向下填充任意<span class="hljs-comment">(这里以生成20个文本为例)</span>，直接往下拉就行了，然后选择填充序列。<br></code></pre></td></tr></table></figure><p><img src="http://i1.fuimg.com/734148/f339fe0048bc678c.png" alt="image-20210307125223190"></p><h3 id="4-第四步"><a href="#4-第四步" class="headerlink" title="4.第四步"></a>4.第四步</h3><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cmake">然后把刚才弄好的序列，复制到 <span class="hljs-keyword">test</span>.txt 里面.<br></code></pre></td></tr></table></figure><p><img src="http://i1.fuimg.com/734148/84a09eee4f7ea635.png" alt="image-20210307125518510"></p><h3 id="5-第五步"><a href="#5-第五步" class="headerlink" title="5.第五步"></a>5.第五步</h3><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs cmake">修改 <span class="hljs-keyword">test</span>.txt 文本的后缀为 bat ,即改为 <span class="hljs-keyword">test</span>.bat<br>如果看不见文本的后缀，需要开启显示后缀。可自行百度。<br></code></pre></td></tr></table></figure><h3 id="6-第六步"><a href="#6-第六步" class="headerlink" title="6.第六步"></a>6.第六步</h3><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cmake">双击 <span class="hljs-keyword">test</span>.bat 即可看见生成了对应数量的文本。<br></code></pre></td></tr></table></figure><h4 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plain">不一定要在excel表格中去弄，这样只是方便些。<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>实用小技能</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>APT学习资料库</title>
    <link href="/2021/03/07/APT%E8%B5%84%E6%96%99%E4%B8%8B%E8%BD%BD/"/>
    <url>/2021/03/07/APT%E8%B5%84%E6%96%99%E4%B8%8B%E8%BD%BD/</url>
    
    <content type="html"><![CDATA[<p>APT相关的学习资料下载。</p><h2 id="资料下载目录"><a href="#资料下载目录" class="headerlink" title="资料下载目录"></a>资料下载目录</h2><h3 id="1-windows提权-快速查找exp"><a href="#1-windows提权-快速查找exp" class="headerlink" title="1.windows提权-快速查找exp"></a><a href="https://edu.heibai.org/APT%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99/windows%E6%8F%90%E6%9D%83-%E5%BF%AB%E9%80%9F%E6%9F%A5%E6%89%BEexp%EF%BC%88%E7%AC%AC%E4%B8%80%E8%AF%BE%EF%BC%89.docx">1.windows提权-快速查找exp</a></h3><h3 id="2-Linux提权-依赖exp篇"><a href="#2-Linux提权-依赖exp篇" class="headerlink" title="2.Linux提权-依赖exp篇"></a><a href="https://edu.heibai.org/APT%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99/Linux%E6%8F%90%E6%9D%83-%E4%BE%9D%E8%B5%96exp%E7%AF%87%20%EF%BC%88%E7%AC%AC%E4%BA%8C%E8%AF%BE%EF%BC%89.docx">2.Linux提权-依赖exp篇</a></h3><h3 id="5-工具介绍-Sqlmap"><a href="#5-工具介绍-Sqlmap" class="headerlink" title="5.工具介绍-Sqlmap"></a><a href="https://edu.heibai.org/APT%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99/%E5%B7%A5%E5%85%B7%E4%BB%8B%E7%BB%8D-Sqlmap%EF%BC%88%E7%AC%AC%E4%BA%94%E8%AF%BE%EF%BC%89.docx">5.工具介绍-Sqlmap</a></h3><h3 id="6-反攻的一次溯源–项目实战3"><a href="#6-反攻的一次溯源–项目实战3" class="headerlink" title="6.反攻的一次溯源–项目实战3"></a><a href="https://edu.heibai.org/APT%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99/%E5%8F%8D%E6%94%BB%E7%9A%84%E4%B8%80%E6%AC%A1%E6%BA%AF%E6%BA%90--%E9%A1%B9%E7%9B%AE%E5%AE%9E%E6%88%983%EF%BC%88%E7%AC%AC%E5%85%AD%E8%AF%BE%EF%BC%89.docx">6.反攻的一次溯源–项目实战3</a></h3><h3 id="7-sql-server-常用操作远程桌面语句"><a href="#7-sql-server-常用操作远程桌面语句" class="headerlink" title="7.sql server 常用操作远程桌面语句"></a><a href="https://edu.heibai.org/APT%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99/sql%20server%20%E5%B8%B8%E7%94%A8%E6%93%8D%E4%BD%9C%E8%BF%9C%E7%A8%8B%E6%A1%8C%E9%9D%A2%E8%AF%AD%E5%8F%A5%EF%BC%88%E7%AC%AC%E4%B8%83%E8%AF%BE%EF%BC%89.docx">7.sql server 常用操作远程桌面语句</a></h3><h3 id="8-模拟诉求任务攻击"><a href="#8-模拟诉求任务攻击" class="headerlink" title="8.模拟诉求任务攻击"></a><a href="https://edu.heibai.org/APT%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99/%E6%A8%A1%E6%8B%9F%E8%AF%89%E6%B1%82%E4%BB%BB%E5%8A%A1%E6%94%BB%E5%87%BB%EF%BC%88%E7%AC%AC%E5%85%AB%E8%AF%BE%EF%BC%89.docx">8.模拟诉求任务攻击</a></h3><h3 id="9-工具介绍-the-backdoor-factory"><a href="#9-工具介绍-the-backdoor-factory" class="headerlink" title="9.工具介绍-the-backdoor-factory"></a><a href="https://edu.heibai.org/APT%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99/%E5%B7%A5%E5%85%B7%E4%BB%8B%E7%BB%8D-the-backdoor-factory%EF%BC%88%E7%AC%AC%E4%B9%9D%E8%AF%BE%EF%BC%89.docx">9.工具介绍-the-backdoor-factory</a></h3><h3 id="10-msfvenom常用生成payload命令"><a href="#10-msfvenom常用生成payload命令" class="headerlink" title="10.msfvenom常用生成payload命令"></a><a href="https://edu.heibai.org/APT%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99/msfvenom%E5%B8%B8%E7%94%A8%E7%94%9F%E6%88%90payload%E5%91%BD%E4%BB%A4%EF%BC%88%E7%AC%AC%E5%8D%81%E8%AF%BE%EF%BC%89.docx">10.msfvenom常用生成payload命令</a></h3><h3 id="11-工具介绍Veil-Evasion"><a href="#11-工具介绍Veil-Evasion" class="headerlink" title="11.工具介绍Veil-Evasion"></a><a href="https://edu.heibai.org/APT%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99/%E5%B7%A5%E5%85%B7%E4%BB%8B%E7%BB%8DVeil-Evasion%EF%BC%88%E7%AC%AC%E5%8D%81%E4%B8%80%E8%AF%BE%EF%BC%89.docx">11.工具介绍Veil-Evasion</a></h3><h3 id="12-基于UDP发现内网存活主机"><a href="#12-基于UDP发现内网存活主机" class="headerlink" title="12.基于UDP发现内网存活主机"></a><a href="https://edu.heibai.org/APT%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99/%E5%9F%BA%E4%BA%8EUDP%E5%8F%91%E7%8E%B0%E5%86%85%E7%BD%91%E5%AD%98%E6%B4%BB%E4%B8%BB%E6%9C%BA%EF%BC%88%E7%AC%AC%E5%8D%81%E4%BA%8C%E8%AF%BE%EF%BC%89.docx">12.基于UDP发现内网存活主机</a></h3><h3 id="13-基于ARP发现内网存活主机"><a href="#13-基于ARP发现内网存活主机" class="headerlink" title="13.基于ARP发现内网存活主机"></a><a href="https://edu.heibai.org/APT%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99/%E5%9F%BA%E4%BA%8EARP%E5%8F%91%E7%8E%B0%E5%86%85%E7%BD%91%E5%AD%98%E6%B4%BB%E4%B8%BB%E6%9C%BA%EF%BC%88%E7%AC%AC%E5%8D%81%E4%B8%89%E8%AF%BE%EF%BC%89.docx">13.基于ARP发现内网存活主机</a></h3><h3 id="14-基于第十课补充payload1"><a href="#14-基于第十课补充payload1" class="headerlink" title="14.基于第十课补充payload1"></a><a href="https://edu.heibai.org/APT%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99/%E5%9F%BA%E4%BA%8E%E7%AC%AC%E5%8D%81%E8%AF%BE%E8%A1%A5%E5%85%85payload1%EF%BC%88%E7%AC%AC%E5%8D%81%E5%9B%9B%E8%AF%BE%EF%BC%89.docx">14.基于第十课补充payload1</a></h3><h3 id="15-基于第十课补充payload2"><a href="#15-基于第十课补充payload2" class="headerlink" title="15.基于第十课补充payload2"></a><a href="https://edu.heibai.org/APT%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99/%E5%9F%BA%E4%BA%8E%E7%AC%AC%E5%8D%81%E8%AF%BE%E8%A1%A5%E5%85%85payload2%EF%BC%88%E7%AC%AC%E5%8D%81%E4%BA%94%E8%AF%BE%EF%BC%89.docx">15.基于第十课补充payload2</a></h3><h3 id="16-红蓝对抗渗透测试1"><a href="#16-红蓝对抗渗透测试1" class="headerlink" title="16.红蓝对抗渗透测试1"></a><a href="https://edu.heibai.org/APT%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99/%E7%BA%A2%E8%93%9D%E5%AF%B9%E6%8A%97%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%951%EF%BC%88%E7%AC%AC%E5%8D%81%E5%85%AD%E8%AF%BE%EF%BC%89.docx">16.红蓝对抗渗透测试1</a></h3><h3 id="17-红蓝对抗渗透测试2"><a href="#17-红蓝对抗渗透测试2" class="headerlink" title="17.红蓝对抗渗透测试2"></a><a href="https://edu.heibai.org/APT%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99/%E7%BA%A2%E8%93%9D%E5%AF%B9%E6%8A%97%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%952%EF%BC%88%E7%AC%AC%E5%8D%81%E4%B8%83%E8%AF%BE%EF%BC%89.docx">17.红蓝对抗渗透测试2</a></h3><h3 id="18-红蓝对抗渗透测试3"><a href="#18-红蓝对抗渗透测试3" class="headerlink" title="18.红蓝对抗渗透测试3"></a><a href="https://edu.heibai.org/APT%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99/%E7%AC%AC%E5%8D%81%E5%85%AB%E8%AF%BE%EF%BC%9A%E7%BA%A2%E8%93%9D%E5%AF%B9%E6%8A%97%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%953.docx">18.红蓝对抗渗透测试3</a></h3><h3 id="19-基于netbios发现内网存活主机"><a href="#19-基于netbios发现内网存活主机" class="headerlink" title="19.基于netbios发现内网存活主机"></a><a href="https://edu.heibai.org/APT%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99/%E5%9F%BA%E4%BA%8Enetbios%E5%8F%91%E7%8E%B0%E5%86%85%E7%BD%91%E5%AD%98%E6%B4%BB%E4%B8%BB%E6%9C%BA%EF%BC%88%E7%AC%AC%E5%8D%81%E4%B9%9D%E8%AF%BE%EF%BC%89.docx">19.基于netbios发现内网存活主机</a></h3><h3 id="20-基于snmp发现内网存活主机"><a href="#20-基于snmp发现内网存活主机" class="headerlink" title="20.基于snmp发现内网存活主机"></a><a href="https://edu.heibai.org/APT%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99/%E5%9F%BA%E4%BA%8Esnmp%E5%8F%91%E7%8E%B0%E5%86%85%E7%BD%91%E5%AD%98%E6%B4%BB%E4%B8%BB%E6%9C%BA%EF%BC%88%E7%AC%AC%E4%BA%8C%E5%8D%81%E8%AF%BE%EF%BC%89.docx">20.基于snmp发现内网存活主机</a></h3><h3 id="31-msf的前生今世"><a href="#31-msf的前生今世" class="headerlink" title="31.msf的前生今世"></a><a href="https://edu.heibai.org/APT%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99/msf%E7%9A%84%E5%89%8D%E7%94%9F%E4%BB%8A%E4%B8%96%EF%BC%88%E7%AC%AC%E4%B8%89%E5%8D%81%E4%B8%80%E8%AF%BE%EF%BC%89.docx">31.msf的前生今世</a></h3><h3 id="32-配置vps上的msf"><a href="#32-配置vps上的msf" class="headerlink" title="32.配置vps上的msf"></a><a href="https://edu.heibai.org/APT%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99/%E9%85%8D%E7%BD%AEvps%E4%B8%8A%E7%9A%84msf%EF%BC%88%E7%AC%AC%E4%B8%89%E5%8D%81%E4%BA%8C%E8%AF%BE%EF%BC%89.docx">32.配置vps上的msf</a></h3><h3 id="33-攻击Mysql服务"><a href="#33-攻击Mysql服务" class="headerlink" title="33.攻击Mysql服务"></a><a href="https://edu.heibai.org/APT%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99/%E6%94%BB%E5%87%BBMysql%E6%9C%8D%E5%8A%A1%EF%BC%88%E7%AC%AC%E4%B8%89%E5%8D%81%E4%B8%89%E8%AF%BE%EF%BC%89.docx">33.攻击Mysql服务</a></h3><h3 id="34-攻击Sql-server-服务"><a href="#34-攻击Sql-server-服务" class="headerlink" title="34.攻击Sql server 服务"></a><a href="https://edu.heibai.org/APT%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99/%E6%94%BB%E5%87%BBSql%20server%20%E6%9C%8D%E5%8A%A1%EF%BC%88%E7%AC%AC%E4%B8%89%E5%8D%81%E5%9B%9B%E8%AF%BE%EF%BC%89.docx">34.攻击Sql server 服务</a></h3><h3 id="35-与Sqlmap结合攻击"><a href="#35-与Sqlmap结合攻击" class="headerlink" title="35.与Sqlmap结合攻击"></a><a href="https://edu.heibai.org/APT%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99/%E4%B8%8ESqlmap%E7%BB%93%E5%90%88%E6%94%BB%E5%87%BB%EF%BC%88%E7%AC%AC%E4%B8%89%E5%8D%81%E4%BA%94%E8%AF%BE%EF%BC%89.docx">35.与Sqlmap结合攻击</a></h3><h3 id="36-解决vps上ssh掉线"><a href="#36-解决vps上ssh掉线" class="headerlink" title="36.解决vps上ssh掉线"></a><a href="https://edu.heibai.org/APT%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99/%E8%A7%A3%E5%86%B3vps%E4%B8%8Assh%E6%8E%89%E7%BA%BF%EF%BC%88%E7%AC%AC%E4%B8%89%E5%8D%81%E5%85%AD%E8%AF%BE%EF%BC%89.docx">36.解决vps上ssh掉线</a></h3><h3 id="37-vbs一句话下载payload"><a href="#37-vbs一句话下载payload" class="headerlink" title="37.vbs一句话下载payload"></a><a href="https://edu.heibai.org/APT%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99/vbs%E4%B8%80%E5%8F%A5%E8%AF%9D%E4%B8%8B%E8%BD%BDpayload%EF%BC%88%E7%AC%AC%E4%B8%89%E5%8D%81%E4%B8%83%E8%AF%BE%EF%BC%89.docx">37.vbs一句话下载payload</a></h3><h3 id="38-certutil一句话下载payload"><a href="#38-certutil一句话下载payload" class="headerlink" title="38.certutil一句话下载payload"></a><a href="https://edu.heibai.org/APT%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99/certutil%E4%B8%80%E5%8F%A5%E8%AF%9D%E4%B8%8B%E8%BD%BDpayload%EF%BC%88%E7%AC%AC%E4%B8%89%E5%8D%81%E5%85%AB%E8%AF%BE%EF%BC%89.docx">38.certutil一句话下载payload</a></h3><h3 id="39-vbs一句话下载payload补充"><a href="#39-vbs一句话下载payload补充" class="headerlink" title="39.vbs一句话下载payload补充"></a><a href="https://edu.heibai.org/APT%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99/vbs%E4%B8%80%E5%8F%A5%E8%AF%9D%E4%B8%8B%E8%BD%BDpayload%E8%A1%A5%E5%85%85%EF%BC%88%E7%AC%AC%E4%B8%89%E5%8D%81%E4%B9%9D%E8%AF%BE%EF%BC%89.docx">39.vbs一句话下载payload补充</a></h3><h3 id="40-ftp一句话下载payload"><a href="#40-ftp一句话下载payload" class="headerlink" title="40.ftp一句话下载payload"></a><a href="https://edu.heibai.org/APT%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99/ftp%E4%B8%80%E5%8F%A5%E8%AF%9D%E4%B8%8B%E8%BD%BDpayload%EF%BC%88%E7%AC%AC%E5%9B%9B%E5%8D%81%E8%AF%BE%EF%BC%89.docx">40.ftp一句话下载payload</a></h3><h3 id="41-bitsadmin一句话下载payload"><a href="#41-bitsadmin一句话下载payload" class="headerlink" title=" 41.bitsadmin一句话下载payload"></a><a href="https://edu.heibai.org/APT%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99/bitsadmin%E4%B8%80%E5%8F%A5%E8%AF%9D%E4%B8%8B%E8%BD%BDpayload%EF%BC%88%E7%AC%AC%E5%9B%9B%E5%8D%81%E4%B8%80%E8%AF%BE%EF%BC%89.docx"> 41.bitsadmin一句话下载payload</a></h3><h3 id="42-攻击FTP-服务"><a href="#42-攻击FTP-服务" class="headerlink" title="42.攻击FTP 服务"></a><a href="https://edu.heibai.org/APT%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99/%E6%94%BB%E5%87%BBFTP%20%E6%9C%8D%E5%8A%A1%EF%BC%88%E7%AC%AC%E5%9B%9B%E5%8D%81%E4%BA%8C%E8%AF%BE%EF%BC%89.docx">42.攻击FTP 服务</a></h3><h3 id="43-js一句话下载payload"><a href="#43-js一句话下载payload" class="headerlink" title=" 43.js一句话下载payload"></a><a href="https://edu.heibai.org/APT%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99/js%E4%B8%80%E5%8F%A5%E8%AF%9D%E4%B8%8B%E8%BD%BDpayload%EF%BC%88%E7%AC%AC%E5%9B%9B%E5%8D%81%E4%B8%89%E8%AF%BE%EF%BC%89.docx"> 43.js一句话下载payload</a></h3><h3 id="44-ertutil一句话下载payload补充"><a href="#44-ertutil一句话下载payload补充" class="headerlink" title="44.ertutil一句话下载payload补充"></a><a href="https://edu.heibai.org/APT%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99/ertutil%E4%B8%80%E5%8F%A5%E8%AF%9D%E4%B8%8B%E8%BD%BDpayload%E8%A1%A5%E5%85%85%EF%BC%88%E7%AC%AC%E5%9B%9B%E5%8D%81%E5%9B%9B%E8%AF%BE%EF%BC%89.docx">44.ertutil一句话下载payload补充</a></h3><h3 id="45-解决bat一句话下载payload黑窗"><a href="#45-解决bat一句话下载payload黑窗" class="headerlink" title="45.解决bat一句话下载payload黑窗"></a><a href="https://edu.heibai.org/APT%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99/%E8%A7%A3%E5%86%B3bat%E4%B8%80%E5%8F%A5%E8%AF%9D%E4%B8%8B%E8%BD%BDpayload%E9%BB%91%E7%AA%97%EF%BC%88%E7%AC%AC%E5%9B%9B%E5%8D%81%E4%BA%94%E8%AF%BE%EF%BC%89.docx">45.解决bat一句话下载payload黑窗</a></h3><h3 id="46-powershell一句话下载payload"><a href="#46-powershell一句话下载payload" class="headerlink" title="46.powershell一句话下载payload"></a><a href="https://edu.heibai.org/APT%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99/powershell%E4%B8%80%E5%8F%A5%E8%AF%9D%E4%B8%8B%E8%BD%BDpayload%EF%BC%88%E7%AC%AC%E5%9B%9B%E5%8D%81%E5%85%AD%E8%AF%BE%EF%BC%89.docx">46.powershell一句话下载payload</a></h3><h3 id="47-payload分离免杀思路"><a href="#47-payload分离免杀思路" class="headerlink" title="47.payload分离免杀思路"></a><a href="https://edu.heibai.org/APT%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99/payload%E5%88%86%E7%A6%BB%E5%85%8D%E6%9D%80%E6%80%9D%E8%B7%AF%EF%BC%88%E7%AC%AC%E5%9B%9B%E5%8D%81%E4%B8%83%E8%AF%BE%EF%BC%89.docx">47.payload分离免杀思路</a></h3><h3 id="48-payload分离免杀思路第二季"><a href="#48-payload分离免杀思路第二季" class="headerlink" title="48.payload分离免杀思路第二季"></a><a href="https://edu.heibai.org/APT%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99/payload%E5%88%86%E7%A6%BB%E5%85%8D%E6%9D%80%E6%80%9D%E8%B7%AF%E7%AC%AC%E4%BA%8C%E5%AD%A3%EF%BC%88%E7%AC%AC%E5%9B%9B%E5%8D%81%E5%85%AB%E8%AF%BE%EF%BC%89.docx">48.payload分离免杀思路第二季</a></h3><h3 id="49-关于Powershell对抗安全软件"><a href="#49-关于Powershell对抗安全软件" class="headerlink" title="49.关于Powershell对抗安全软件"></a><a href="https://edu.heibai.org/APT%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99/%E5%85%B3%E4%BA%8EPowershell%E5%AF%B9%E6%8A%97%E5%AE%89%E5%85%A8%E8%BD%AF%E4%BB%B6%EF%BC%88%E7%AC%AC%E5%9B%9B%E5%8D%81%E4%B9%9D%E8%AF%BE%EF%BC%89.docx">49.关于Powershell对抗安全软件</a></h3><h3 id="50-基于SqlDataSourceEnumerator发现内网存活主机"><a href="#50-基于SqlDataSourceEnumerator发现内网存活主机" class="headerlink" title="50.基于SqlDataSourceEnumerator发现内网存活主机"></a><a href="https://edu.heibai.org/APT%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99/%E5%9F%BA%E4%BA%8ESqlDataSourceEnumerator%E5%8F%91%E7%8E%B0%E5%86%85%E7%BD%91%E5%AD%98%E6%B4%BB%E4%B8%BB%E6%9C%BA%EF%BC%88%E7%AC%AC%E4%BA%94%E5%8D%81%E8%AF%BE%EF%BC%89%EF%BC%89.docx">50.基于SqlDataSourceEnumerator发现内网存活主机</a></h3><h3 id="51-项目回忆：体系的本质是知识点串联"><a href="#51-项目回忆：体系的本质是知识点串联" class="headerlink" title="51.项目回忆：体系的本质是知识点串联"></a><a href="https://edu.heibai.org/APT%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99/%E9%A1%B9%E7%9B%AE%E5%9B%9E%E5%BF%86%EF%BC%9A%E4%BD%93%E7%B3%BB%E7%9A%84%E6%9C%AC%E8%B4%A8%E6%98%AF%E7%9F%A5%E8%AF%86%E7%82%B9%E4%B8%B2%E8%81%94%EF%BC%88%E7%AC%AC%E4%BA%94%E5%8D%81%E4%B8%80%E8%AF%BE%EF%BC%89.docx">51.项目回忆：体系的本质是知识点串联</a></h3><h3 id="52-渗透的本质是信息搜集"><a href="#52-渗透的本质是信息搜集" class="headerlink" title="52.渗透的本质是信息搜集"></a><a href="https://edu.heibai.org/APT%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99/%E6%B8%97%E9%80%8F%E7%9A%84%E6%9C%AC%E8%B4%A8%E6%98%AF%E4%BF%A1%E6%81%AF%E6%90%9C%E9%9B%86%EF%BC%88%E7%AC%AC%E4%BA%94%E5%8D%81%E4%BA%8C%E8%AF%BE%EF%BC%89%EF%BC%89.docx">52.渗透的本质是信息搜集</a></h3><h3 id="53-内网渗透中的文件传输"><a href="#53-内网渗透中的文件传输" class="headerlink" title="53.内网渗透中的文件传输"></a><a href="https://edu.heibai.org/APT%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F%E4%B8%AD%E7%9A%84%E6%96%87%E4%BB%B6%E4%BC%A0%E8%BE%93%EF%BC%88%E7%AC%AC%E4%BA%94%E5%8D%81%E4%B8%89%E8%AF%BE%EF%BC%89.docx">53.内网渗透中的文件传输</a></h3><h3 id="54-基于Powershell做Socks-4-5代理"><a href="#54-基于Powershell做Socks-4-5代理" class="headerlink" title="54.基于Powershell做Socks 4-5代理"></a><a href="https://edu.heibai.org/APT%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99/%E5%9F%BA%E4%BA%8EPowershell%E5%81%9ASocks%204-5%E4%BB%A3%E7%90%86%EF%BC%88%E7%AC%AC%E4%BA%94%E5%8D%81%E5%9B%9B%E8%AF%BE%EF%BC%89.docx">54.基于Powershell做Socks 4-5代理</a></h3><h3 id="55-与Smbmap结合攻击"><a href="#55-与Smbmap结合攻击" class="headerlink" title="55.与Smbmap结合攻击"></a><a href="https://edu.heibai.org/APT%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99/%E4%B8%8ESmbmap%E7%BB%93%E5%90%88%E6%94%BB%E5%87%BB%EF%BC%88%E7%AC%AC%E4%BA%94%E5%8D%81%E4%BA%94%E8%AF%BE%EF%BC%89.docx">55.与Smbmap结合攻击</a></h3><h3 id="56-离线提取目标机hash"><a href="#56-离线提取目标机hash" class="headerlink" title="56.离线提取目标机hash"></a><a href="https://edu.heibai.org/APT%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99/%E7%A6%BB%E7%BA%BF%E6%8F%90%E5%8F%96%E7%9B%AE%E6%A0%87%E6%9C%BAhash%EF%BC%88%E7%AC%AC%E4%BA%94%E5%8D%81%E5%85%AD%E8%AF%BE%EF%BC%89.docx">56.离线提取目标机hash</a></h3><h3 id="57-高级持续渗透-第一季关于后门"><a href="#57-高级持续渗透-第一季关于后门" class="headerlink" title="57.高级持续渗透-第一季关于后门"></a><a href="https://edu.heibai.org/APT%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99/%E9%AB%98%E7%BA%A7%E6%8C%81%E7%BB%AD%E6%B8%97%E9%80%8F-%E7%AC%AC%E4%B8%80%E5%AD%A3%E5%85%B3%E4%BA%8E%E5%90%8E%E9%97%A8%EF%BC%88%E7%AC%AC%E4%BA%94%E5%8D%81%E4%B8%83%E8%AF%BE%EF%BC%89.docx">57.高级持续渗透-第一季关于后门</a></h3><h3 id="58-高级持续渗透-第二季关于后门补充一"><a href="#58-高级持续渗透-第二季关于后门补充一" class="headerlink" title="58.高级持续渗透-第二季关于后门补充一"></a><a href="https://edu.heibai.org/APT%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99/%E9%AB%98%E7%BA%A7%E6%8C%81%E7%BB%AD%E6%B8%97%E9%80%8F-%E7%AC%AC%E4%BA%8C%E5%AD%A3%E5%85%B3%E4%BA%8E%E5%90%8E%E9%97%A8%E8%A1%A5%E5%85%85%E4%B8%80%EF%BC%88%E7%AC%AC%E4%BA%94%E5%8D%81%E5%85%AB%E8%AF%BE%EF%BC%89.docx">58.高级持续渗透-第二季关于后门补充一</a></h3><h3 id="59-高级持续渗透-第三季关于后门补充二"><a href="#59-高级持续渗透-第三季关于后门补充二" class="headerlink" title="59.高级持续渗透-第三季关于后门补充二"></a><a href="https://edu.heibai.org/APT%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99/%E9%AB%98%E7%BA%A7%E6%8C%81%E7%BB%AD%E6%B8%97%E9%80%8F-%E7%AC%AC%E4%B8%89%E5%AD%A3%E5%85%B3%E4%BA%8E%E5%90%8E%E9%97%A8%E8%A1%A5%E5%85%85%E4%BA%8C%EF%BC%88%E7%AC%AC%E4%BA%94%E5%8D%81%E4%B9%9D%E8%AF%BE%EF%BC%89.docx">59.高级持续渗透-第三季关于后门补充二</a></h3><h3 id="60-高级持续渗透-第四季关于后门"><a href="#60-高级持续渗透-第四季关于后门" class="headerlink" title="60.高级持续渗透-第四季关于后门"></a><a href="https://edu.heibai.org/APT%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99/%E9%AB%98%E7%BA%A7%E6%8C%81%E7%BB%AD%E6%B8%97%E9%80%8F-%E7%AC%AC%E5%9B%9B%E5%AD%A3%E5%85%B3%E4%BA%8E%E5%90%8E%E9%97%A8%EF%BC%88%E7%AC%AC%E5%85%AD%E5%8D%81%E8%AF%BE%EF%BC%89.docx">60.高级持续渗透-第四季关于后门</a></h3><h3 id="61-高级持续渗透-第五季关于后门"><a href="#61-高级持续渗透-第五季关于后门" class="headerlink" title="61.高级持续渗透-第五季关于后门"></a><a href="https://edu.heibai.org/APT%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99/61-65/%E7%AC%AC%E5%85%AD%E5%8D%81%E4%B8%80%E8%AF%BE%EF%BC%9A%E9%AB%98%E7%BA%A7%E6%8C%81%E7%BB%AD%E6%B8%97%E9%80%8F-%E7%AC%AC%E4%BA%94%E5%AD%A3%E5%85%B3%E4%BA%8E%E5%90%8E%E9%97%A8.docx">61.高级持续渗透-第五季关于后门</a></h3><h3 id="62-高级持续渗透-第六季关于后门"><a href="#62-高级持续渗透-第六季关于后门" class="headerlink" title="62.高级持续渗透-第六季关于后门"></a><a href="https://edu.heibai.org/APT%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99/61-65/%E7%AC%AC%E5%85%AD%E5%8D%81%E4%BA%8C%E8%AF%BE%EF%BC%9A%E9%AB%98%E7%BA%A7%E6%8C%81%E7%BB%AD%E6%B8%97%E9%80%8F-%E7%AC%AC%E5%85%AD%E5%AD%A3%E5%85%B3%E4%BA%8E%E5%90%8E%E9%97%A8.docx">62.高级持续渗透-第六季关于后门</a></h3><h3 id="63-高级持续渗透-第七季demo的成长"><a href="#63-高级持续渗透-第七季demo的成长" class="headerlink" title="63.高级持续渗透-第七季demo的成长"></a><a href="https://edu.heibai.org/APT%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99/61-65/%E7%AC%AC%E5%85%AD%E5%8D%81%E4%B8%89%E8%AF%BE%EF%BC%9A%E9%AB%98%E7%BA%A7%E6%8C%81%E7%BB%AD%E6%B8%97%E9%80%8F-%E7%AC%AC%E4%B8%83%E5%AD%A3demo%E7%9A%84%E6%88%90%E9%95%BF.docx">63.高级持续渗透-第七季demo的成长</a></h3><h3 id="64-高级持续渗透-第八季demo便是远控"><a href="#64-高级持续渗透-第八季demo便是远控" class="headerlink" title="64.高级持续渗透-第八季demo便是远控"></a><a href="https://edu.heibai.org/APT%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99/61-65/%E7%AC%AC%E5%85%AD%E5%8D%81%E5%9B%9B%E8%AF%BE%EF%BC%9A%E9%AB%98%E7%BA%A7%E6%8C%81%E7%BB%AD%E6%B8%97%E9%80%8F-%E7%AC%AC%E5%85%AB%E5%AD%A3demo%E4%BE%BF%E6%98%AF%E8%BF%9C%E6%8E%A7.docx">64.高级持续渗透-第八季demo便是远控</a></h3><h3 id="65-离线提取目标机hash补充"><a href="#65-离线提取目标机hash补充" class="headerlink" title="65.离线提取目标机hash补充"></a><a href="https://edu.heibai.org/APT%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99/61-65/%E7%AC%AC%E5%85%AD%E5%8D%81%E4%BA%94%E8%AF%BE%EF%BC%9A%E7%A6%BB%E7%BA%BF%E6%8F%90%E5%8F%96%E7%9B%AE%E6%A0%87%E6%9C%BAhash%E8%A1%A5%E5%85%85.docx">65.离线提取目标机hash补充</a></h3><h3 id="66-借助aspx对payload进行分离免杀"><a href="#66-借助aspx对payload进行分离免杀" class="headerlink" title="66.借助aspx对payload进行分离免杀"></a><a href="https://edu.heibai.org/APT%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99/66-70/%E7%AC%AC%E5%85%AD%E5%8D%81%E5%85%AD%E8%AF%BE%EF%BC%9A%E5%80%9F%E5%8A%A9aspx%E5%AF%B9payload%E8%BF%9B%E8%A1%8C%E5%88%86%E7%A6%BB%E5%85%8D%E6%9D%80.docx">66.借助aspx对payload进行分离免杀</a></h3><h3 id="67-meterpreter下的irb操作第一季"><a href="#67-meterpreter下的irb操作第一季" class="headerlink" title="67.meterpreter下的irb操作第一季"></a><a href="https://edu.heibai.org/APT%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99/66-70/%E7%AC%AC%E5%85%AD%E5%8D%81%E4%B8%83%E8%AF%BE%EF%BC%9Ameterpreter%E4%B8%8B%E7%9A%84irb%E6%93%8D%E4%BD%9C%E7%AC%AC%E4%B8%80%E5%AD%A3.docx">67.meterpreter下的irb操作第一季</a></h3><h3 id="68-基于Ruby内存加载shellcode第一季"><a href="#68-基于Ruby内存加载shellcode第一季" class="headerlink" title="68.基于Ruby内存加载shellcode第一季"></a><a href="https://edu.heibai.org/APT%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99/66-70/%E7%AC%AC%E5%85%AD%E5%8D%81%E5%85%AB%E8%AF%BE%EF%BC%9A%E5%9F%BA%E4%BA%8ERuby%E5%86%85%E5%AD%98%E5%8A%A0%E8%BD%BDshellcode%E7%AC%AC%E4%B8%80%E5%AD%A3.docx">68.基于Ruby内存加载shellcode第一季</a></h3><h3 id="69-渗透，持续渗透，后渗透的本质"><a href="#69-渗透，持续渗透，后渗透的本质" class="headerlink" title="69.渗透，持续渗透，后渗透的本质"></a><a href="https://edu.heibai.org/APT%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99/66-70/%E7%AC%AC%E5%85%AD%E5%8D%81%E4%B9%9D%E8%AF%BE%EF%BC%9A%E6%B8%97%E9%80%8F%EF%BC%8C%E6%8C%81%E7%BB%AD%E6%B8%97%E9%80%8F%EF%BC%8C%E5%90%8E%E6%B8%97%E9%80%8F%E7%9A%84%E6%9C%AC%E8%B4%A8.docx">69.渗透，持续渗透，后渗透的本质</a></h3><h3 id="70-ftp一句话下载payload补充"><a href="#70-ftp一句话下载payload补充" class="headerlink" title="70.ftp一句话下载payload补充"></a><a href="https://edu.heibai.org/APT%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99/66-70/%E7%AC%AC%E4%B8%83%E5%8D%81%E8%AF%BE%EF%BC%9Aftp%E4%B8%80%E5%8F%A5%E8%AF%9D%E4%B8%8B%E8%BD%BDpayload%E8%A1%A5%E5%85%85.docx">70.ftp一句话下载payload补充</a></h3><h3 id="71-基于白名单Msbuild-exe执行payload第一季"><a href="#71-基于白名单Msbuild-exe执行payload第一季" class="headerlink" title="71.基于白名单Msbuild.exe执行payload第一季"></a><a href="https://edu.heibai.org/APT%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99/71-74/%E7%AC%AC%E4%B8%83%E5%8D%81%E4%B8%80%E8%AF%BE%EF%BC%9A%E5%9F%BA%E4%BA%8E%E7%99%BD%E5%90%8D%E5%8D%95Msbuild.exe%E6%89%A7%E8%A1%8Cpayload%E7%AC%AC%E4%B8%80%E5%AD%A3.docx">71.基于白名单Msbuild.exe执行payload第一季</a></h3><h3 id="72-基于白名单Installutil-exe执行payload第二季"><a href="#72-基于白名单Installutil-exe执行payload第二季" class="headerlink" title="72.基于白名单Installutil.exe执行payload第二季"></a><a href="https://edu.heibai.org/APT%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99/71-74/%E7%AC%AC%E4%B8%83%E5%8D%81%E4%BA%8C%E8%AF%BE%EF%BC%9A%E5%9F%BA%E4%BA%8E%E7%99%BD%E5%90%8D%E5%8D%95Installutil.exe%E6%89%A7%E8%A1%8Cpayload%E7%AC%AC%E4%BA%8C%E5%AD%A3.docx">72.基于白名单Installutil.exe执行payload第二季</a></h3><h3 id="73-基于白名单Regasm-exe执行payload第三季"><a href="#73-基于白名单Regasm-exe执行payload第三季" class="headerlink" title="73.基于白名单Regasm.exe执行payload第三季"></a><a href="https://edu.heibai.org/APT%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99/71-74/%E7%AC%AC%E4%B8%83%E5%8D%81%E4%B8%89%E8%AF%BE%EF%BC%9A%E5%9F%BA%E4%BA%8E%E7%99%BD%E5%90%8D%E5%8D%95Regasm.exe%E6%89%A7%E8%A1%8Cpayload%E7%AC%AC%E4%B8%89%E5%AD%A3.docx">73.基于白名单Regasm.exe执行payload第三季</a></h3><h3 id="74-基于白名单regsvcs-exe执行payload第四季"><a href="#74-基于白名单regsvcs-exe执行payload第四季" class="headerlink" title="74.基于白名单regsvcs.exe执行payload第四季"></a><a href="https://edu.heibai.org/APT%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99/71-74/%E7%AC%AC%E4%B8%83%E5%8D%81%E5%9B%9B%E8%AF%BE%EF%BC%9A%E5%9F%BA%E4%BA%8E%E7%99%BD%E5%90%8D%E5%8D%95regsvcs.exe%E6%89%A7%E8%A1%8Cpayload%E7%AC%AC%E5%9B%9B%E5%AD%A3.docx">74.基于白名单regsvcs.exe执行payload第四季</a></h3><h3 id="75-基于白名单Mshta-exe执行payload第五季"><a href="#75-基于白名单Mshta-exe执行payload第五季" class="headerlink" title="75.基于白名单Mshta.exe执行payload第五季"></a><a href="https://edu.heibai.org/APT%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99/75-77/%E7%AC%AC%E4%B8%83%E5%8D%81%E4%BA%94%E8%AF%BE%EF%BC%9A%E5%9F%BA%E4%BA%8E%E7%99%BD%E5%90%8D%E5%8D%95Mshta.exe%E6%89%A7%E8%A1%8Cpayload%E7%AC%AC%E4%BA%94%E5%AD%A3.docx">75.基于白名单Mshta.exe执行payload第五季</a></h3><h3 id="76-基于白名单Compiler-exe执行payload第六季"><a href="#76-基于白名单Compiler-exe执行payload第六季" class="headerlink" title="76.基于白名单Compiler.exe执行payload第六季"></a><a href="https://edu.heibai.org/APT%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99/75-77/%E7%AC%AC%E4%B8%83%E5%8D%81%E5%85%AD%E8%AF%BE%EF%BC%9A%E5%9F%BA%E4%BA%8E%E7%99%BD%E5%90%8D%E5%8D%95Compiler.exe%E6%89%A7%E8%A1%8Cpayload%E7%AC%AC%E5%85%AD%E5%AD%A3.docx">76.基于白名单Compiler.exe执行payload第六季</a></h3><h3 id="77-基于白名单Csc-exe执行payload第七季"><a href="#77-基于白名单Csc-exe执行payload第七季" class="headerlink" title="77.基于白名单Csc.exe执行payload第七季"></a><a href="https://edu.heibai.org/APT%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99/75-77/%E7%AC%AC%E4%B8%83%E5%8D%81%E4%B8%83%E8%AF%BE%EF%BC%9A%E5%9F%BA%E4%BA%8E%E7%99%BD%E5%90%8D%E5%8D%95Csc.exe%E6%89%A7%E8%A1%8Cpayload%E7%AC%AC%E4%B8%83%E5%AD%A3.docx">77.基于白名单Csc.exe执行payload第七季</a></h3><h3 id="78-基于白名单Msiexec执行payload第八季"><a href="#78-基于白名单Msiexec执行payload第八季" class="headerlink" title="78.基于白名单Msiexec执行payload第八季"></a><a href="https://edu.heibai.org/APT%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99/78-80/%E7%AC%AC%E4%B8%83%E5%8D%81%E5%85%AB%E8%AF%BE%EF%BC%9A%E5%9F%BA%E4%BA%8E%E7%99%BD%E5%90%8D%E5%8D%95Msiexec%E6%89%A7%E8%A1%8Cpayload%E7%AC%AC%E5%85%AB%E5%AD%A3.docx">78.基于白名单Msiexec执行payload第八季</a></h3><h3 id="79-基于白名单Regsvr32执行payload第九季"><a href="#79-基于白名单Regsvr32执行payload第九季" class="headerlink" title="79.基于白名单Regsvr32执行payload第九季"></a><a href="https://edu.heibai.org/APT%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99/78-80/%E7%AC%AC%E4%B8%83%E5%8D%81%E4%B9%9D%E8%AF%BE%EF%BC%9A%E5%9F%BA%E4%BA%8E%E7%99%BD%E5%90%8D%E5%8D%95Regsvr32%E6%89%A7%E8%A1%8Cpayload%E7%AC%AC%E4%B9%9D%E5%AD%A3.docx">79.基于白名单Regsvr32执行payload第九季</a></h3><h3 id="80-基于白名单Wmic执行payload第十季"><a href="#80-基于白名单Wmic执行payload第十季" class="headerlink" title="80.基于白名单Wmic执行payload第十季"></a><a href="https://edu.heibai.org/APT%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99/78-80/%E7%AC%AC%E5%85%AB%E5%8D%81%E8%AF%BE%EF%BC%9A%E5%9F%BA%E4%BA%8E%E7%99%BD%E5%90%8D%E5%8D%95Wmic%E6%89%A7%E8%A1%8Cpayload%E7%AC%AC%E5%8D%81%E5%AD%A3.docx">80.基于白名单Wmic执行payload第十季</a></h3><h3 id="81-基于白名单Rundll32-exe执行payload第十一季"><a href="#81-基于白名单Rundll32-exe执行payload第十一季" class="headerlink" title="81.基于白名单Rundll32.exe执行payload第十一季"></a><a href="https://edu.heibai.org/APT%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99/81-90/%E7%AC%AC%E5%85%AB%E5%8D%81%E4%B8%80%E8%AF%BE%EF%BC%9A%E5%9F%BA%E4%BA%8E%E7%99%BD%E5%90%8D%E5%8D%95Rundll32.exe%E6%89%A7%E8%A1%8Cpayload%E7%AC%AC%E5%8D%81%E4%B8%80%E5%AD%A3.docx">81.基于白名单Rundll32.exe执行payload第十一季</a></h3><h3 id="82-基于白名单Odbcconf执行payload第十二季"><a href="#82-基于白名单Odbcconf执行payload第十二季" class="headerlink" title="82.基于白名单Odbcconf执行payload第十二季"></a><a href="https://edu.heibai.org/APT%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99/81-90/%E7%AC%AC%E5%85%AB%E5%8D%81%E4%BA%8C%E8%AF%BE%EF%BC%9A%E5%9F%BA%E4%BA%8E%E7%99%BD%E5%90%8D%E5%8D%95Odbcconf%E6%89%A7%E8%A1%8Cpayload%E7%AC%AC%E5%8D%81%E4%BA%8C%E5%AD%A3.docx">82.基于白名单Odbcconf执行payload第十二季</a></h3><h3 id="83-基于白名单PsExec执行payload第十三季"><a href="#83-基于白名单PsExec执行payload第十三季" class="headerlink" title="83.基于白名单PsExec执行payload第十三季"></a><a href="https://edu.heibai.org/APT%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99/81-90/%E7%AC%AC%E5%85%AB%E5%8D%81%E4%B8%89%E8%AF%BE%EF%BC%9A%E5%9F%BA%E4%BA%8E%E7%99%BD%E5%90%8D%E5%8D%95PsExec%E6%89%A7%E8%A1%8Cpayload%E7%AC%AC%E5%8D%81%E4%B8%89%E5%AD%A3.docx">83.基于白名单PsExec执行payload第十三季</a></h3><h3 id="84-基于白名单Forfiles执行payload第十四季"><a href="#84-基于白名单Forfiles执行payload第十四季" class="headerlink" title="84.基于白名单Forfiles执行payload第十四季"></a><a href="https://edu.heibai.org/APT%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99/81-90/%E7%AC%AC%E5%85%AB%E5%8D%81%E5%9B%9B%E8%AF%BE%EF%BC%9A%E5%9F%BA%E4%BA%8E%E7%99%BD%E5%90%8D%E5%8D%95Forfiles%E6%89%A7%E8%A1%8Cpayload%E7%AC%AC%E5%8D%81%E5%9B%9B%E5%AD%A3.docx">84.基于白名单Forfiles执行payload第十四季</a></h3><h3 id="85-基于白名单Pcalua执行payload第十五季"><a href="#85-基于白名单Pcalua执行payload第十五季" class="headerlink" title="85.基于白名单Pcalua执行payload第十五季"></a><a href="https://edu.heibai.org/APT%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99/81-90/%E7%AC%AC%E5%85%AB%E5%8D%81%E4%BA%94%E8%AF%BE%EF%BC%9A%E5%9F%BA%E4%BA%8E%E7%99%BD%E5%90%8D%E5%8D%95Pcalua%E6%89%A7%E8%A1%8Cpayload%E7%AC%AC%E5%8D%81%E4%BA%94%E5%AD%A3.docx">85.基于白名单Pcalua执行payload第十五季</a></h3><h3 id="86-基于白名单Msiexec执行payload第八季补充"><a href="#86-基于白名单Msiexec执行payload第八季补充" class="headerlink" title="86.基于白名单Msiexec执行payload第八季补充"></a><a href="https://edu.heibai.org/APT%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99/81-90/%E7%AC%AC%E5%85%AB%E5%8D%81%E5%85%AD%E8%AF%BE%EF%BC%9A%E5%9F%BA%E4%BA%8E%E7%99%BD%E5%90%8D%E5%8D%95Msiexec%E6%89%A7%E8%A1%8Cpayload%E7%AC%AC%E5%85%AB%E5%AD%A3%E8%A1%A5%E5%85%85.docx">86.基于白名单Msiexec执行payload第八季补充</a></h3><h3 id="87-基于白名单Cmstp-exe执行payload第十六季"><a href="#87-基于白名单Cmstp-exe执行payload第十六季" class="headerlink" title="87.基于白名单Cmstp.exe执行payload第十六季"></a><a href="https://edu.heibai.org/APT%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99/81-90/%E7%AC%AC%E5%85%AB%E5%8D%81%E4%B8%83%E8%AF%BE%EF%BC%9A%E5%9F%BA%E4%BA%8E%E7%99%BD%E5%90%8D%E5%8D%95Cmstp.exe%E6%89%A7%E8%A1%8Cpayload%E7%AC%AC%E5%8D%81%E5%85%AD%E5%AD%A3.docx">87.基于白名单Cmstp.exe执行payload第十六季</a></h3><h3 id="88-基于白名单Ftp-exe执行payload第十九季"><a href="#88-基于白名单Ftp-exe执行payload第十九季" class="headerlink" title="88.基于白名单Ftp.exe执行payload第十九季"></a><a href="https://edu.heibai.org/APT%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99/81-90/%E7%AC%AC%E5%85%AB%E5%8D%81%E5%85%AB%E8%AF%BE%EF%BC%9A%E5%9F%BA%E4%BA%8E%E7%99%BD%E5%90%8D%E5%8D%95Ftp.exe%E6%89%A7%E8%A1%8Cpayload%E7%AC%AC%E5%8D%81%E4%B9%9D%E5%AD%A3.docx">88.基于白名单Ftp.exe执行payload第十九季</a></h3><h3 id="89-基于白名单Url-dll执行payload第十七季"><a href="#89-基于白名单Url-dll执行payload第十七季" class="headerlink" title="89.基于白名单Url.dll执行payload第十七季"></a><a href="https://edu.heibai.org/APT%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99/81-90/%E7%AC%AC%E5%85%AB%E5%8D%81%E4%B9%9D%E8%AF%BE%EF%BC%9A%E5%9F%BA%E4%BA%8E%E7%99%BD%E5%90%8D%E5%8D%95Url.dll%E6%89%A7%E8%A1%8Cpayload%E7%AC%AC%E5%8D%81%E4%B8%83%E5%AD%A3.docx">89.基于白名单Url.dll执行payload第十七季</a></h3><h3 id="90-基于白名单zipfldr-dll执行payload第十八季"><a href="#90-基于白名单zipfldr-dll执行payload第十八季" class="headerlink" title="90.基于白名单zipfldr.dll执行payload第十八季"></a><a href="https://edu.heibai.org/APT%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99/81-90/%E7%AC%AC%E4%B9%9D%E5%8D%81%E8%AF%BE%EF%BC%9A%E5%9F%BA%E4%BA%8E%E7%99%BD%E5%90%8D%E5%8D%95zipfldr.dll%E6%89%A7%E8%A1%8Cpayload%E7%AC%AC%E5%8D%81%E5%85%AB%E5%AD%A3.docx">90.基于白名单zipfldr.dll执行payload第十八季</a></h3><h3 id="91-从目标文件中做信息搜集第一季"><a href="#91-从目标文件中做信息搜集第一季" class="headerlink" title="91.从目标文件中做信息搜集第一季"></a><a href="https://edu.heibai.org/APT%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99/91-100/%E7%AC%AC%E4%B9%9D%E5%8D%81%E4%B8%80%E8%AF%BE%EF%BC%9A%E4%BB%8E%E7%9B%AE%E6%A0%87%E6%96%87%E4%BB%B6%E4%B8%AD%E5%81%9A%E4%BF%A1%E6%81%AF%E6%90%9C%E9%9B%86%E7%AC%AC%E4%B8%80%E5%AD%A3.docx">91.从目标文件中做信息搜集第一季</a></h3><h3 id="92-实战中的Payload应用"><a href="#92-实战中的Payload应用" class="headerlink" title="92.实战中的Payload应用"></a><a href="https://edu.heibai.org/APT%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99/91-100/%E7%AC%AC%E4%B9%9D%E5%8D%81%E4%BA%8C%E8%AF%BE%EF%BC%9A%E5%AE%9E%E6%88%98%E4%B8%AD%E7%9A%84Payload%E5%BA%94%E7%94%A8.docx">92.实战中的Payload应用</a></h3><h3 id="93-与CrackMapExec结合攻击"><a href="#93-与CrackMapExec结合攻击" class="headerlink" title="93.与CrackMapExec结合攻击"></a><a href="https://edu.heibai.org/APT%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99/91-100/%E7%AC%AC%E4%B9%9D%E5%8D%81%E4%B8%89%E8%AF%BE%EF%BC%9A%E4%B8%8ECrackMapExec%E7%BB%93%E5%90%88%E6%94%BB%E5%87%BB.docx">93.与CrackMapExec结合攻击</a></h3><h3 id="94-基于实战中的small-payload"><a href="#94-基于实战中的small-payload" class="headerlink" title="94.基于实战中的small payload"></a><a href="https://edu.heibai.org/APT%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99/91-100/%E7%AC%AC%E4%B9%9D%E5%8D%81%E5%9B%9B%E8%AF%BE%EF%BC%9A%E5%9F%BA%E4%BA%8E%E5%AE%9E%E6%88%98%E4%B8%AD%E7%9A%84small%20payload.docx">94.基于实战中的small payload</a></h3><h3 id="95-基于Portfwd端口转发"><a href="#95-基于Portfwd端口转发" class="headerlink" title="95.基于Portfwd端口转发"></a><a href="https://edu.heibai.org/APT%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99/91-100/%E7%AC%AC%E4%B9%9D%E5%8D%81%E4%BA%94%E8%AF%BE%EF%BC%9A%E5%9F%BA%E4%BA%8EPortfwd%E7%AB%AF%E5%8F%A3%E8%BD%AC%E5%8F%91.docx">95.基于Portfwd端口转发</a></h3><h3 id="96-HTTP隧道ABPTTS第一季"><a href="#96-HTTP隧道ABPTTS第一季" class="headerlink" title="96.HTTP隧道ABPTTS第一季"></a><a href="https://edu.heibai.org/APT%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99/91-100/%E7%AC%AC%E4%B9%9D%E5%8D%81%E5%85%AD%E8%AF%BE%EF%BC%9AHTTP%E9%9A%A7%E9%81%93ABPTTS%E7%AC%AC%E4%B8%80%E5%AD%A3.docx">96.HTTP隧道ABPTTS第一季</a></h3><h3 id="97-MSF配置自定义Payload控制目标主机权限"><a href="#97-MSF配置自定义Payload控制目标主机权限" class="headerlink" title="97.MSF配置自定义Payload控制目标主机权限"></a><a href="https://edu.heibai.org/APT%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99/91-100/%E7%AC%AC%E4%B9%9D%E5%8D%81%E4%B8%83%E8%AF%BE%EF%BC%9AMSF%E9%85%8D%E7%BD%AE%E8%87%AA%E5%AE%9A%E4%B9%89Payload%E6%8E%A7%E5%88%B6%E7%9B%AE%E6%A0%87%E4%B8%BB%E6%9C%BA%E6%9D%83%E9%99%90.docx">97.MSF配置自定义Payload控制目标主机权限</a></h3><h3 id="98-HTTP隧道reGeorg第二季"><a href="#98-HTTP隧道reGeorg第二季" class="headerlink" title="98.HTTP隧道reGeorg第二季"></a><a href="https://edu.heibai.org/APT%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99/91-100/%E7%AC%AC%E4%B9%9D%E5%8D%81%E5%85%AB%E8%AF%BE%EF%BC%9AHTTP%E9%9A%A7%E9%81%93reGeorg%E7%AC%AC%E4%BA%8C%E5%AD%A3.docx">98.HTTP隧道reGeorg第二季</a></h3><h3 id="99-HTTP隧道Tunna第三季"><a href="#99-HTTP隧道Tunna第三季" class="headerlink" title="99.HTTP隧道Tunna第三季"></a><a href="https://edu.heibai.org/APT%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99/91-100/%E7%AC%AC%E4%B9%9D%E5%8D%81%E4%B9%9D%E8%AF%BE%EF%BC%9AHTTP%E9%9A%A7%E9%81%93Tunna%E7%AC%AC%E4%B8%89%E5%AD%A3.docx">99.HTTP隧道Tunna第三季</a></h3><h3 id="100-HTTP隧道reDuh第四季"><a href="#100-HTTP隧道reDuh第四季" class="headerlink" title="100.HTTP隧道reDuh第四季"></a><a href="https://edu.heibai.org/APT%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99/91-100/%E7%AC%AC%E4%B8%80%E7%99%BE%E8%AF%BE%EF%BC%9AHTTP%E9%9A%A7%E9%81%93reDuh%E7%AC%AC%E5%9B%9B%E5%AD%A3.docx">100.HTTP隧道reDuh第四季</a></h3>]]></content>
    
    
    <categories>
      
      <category>学习资源下载</category>
      
    </categories>
    
    
  </entry>
  
  
  
  
  
  
  <entry>
    <title>关于</title>
    <link href="/"/>
    <url>/</url>
    
    <content type="html"><![CDATA[]]></content>
    
  </entry>
  
  
  
  <entry>
    <title>资源</title>
    <link href="/"/>
    <url>/</url>
    
    <content type="html"><![CDATA[]]></content>
    
  </entry>
  
  
  
</search>
